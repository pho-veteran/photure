services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: photure_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-photure}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - photure_network

  # FastAPI Backend
  backend:
    build:
      context: ./photure-be
      dockerfile: Dockerfile
    container_name: photure_backend
    restart: unless-stopped
    environment:
      - MONGODB_URL=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-admin123}@mongodb:27017/${MONGO_DATABASE:-photure}?authSource=admin
      - DATABASE_NAME=${MONGO_DATABASE:-photure}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - UPLOAD_DIR=/app/uploads
      - AUTHORIZED_PARTY=${VITE_APP_URL:-http://localhost}
    ports:
      - "8000:8000"
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      - mongodb
    networks:
      - photure_network

  # React Frontend Build (no server, just builds files)
  frontend:
    build:
      context: ./photure-fe
      dockerfile: Dockerfile
      target: production
      args:
        VITE_APP_URL: ${VITE_APP_URL:-http://localhost/}
        VITE_CLERK_PUBLISHABLE_KEY: ${VITE_CLERK_PUBLISHABLE_KEY}
    container_name: photure_frontend
    volumes:
      - frontend_dist:/usr/share/nginx/html
    networks:
      - photure_network

  # Nginx Reverse Proxy and Frontend Server
  nginx:
    image: nginx:alpine
    container_name: photure_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - frontend_dist:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    networks:
      - photure_network

volumes:
  mongodb_data:
    driver: local
  uploads_data:
    driver: local
  frontend_dist:
    driver: local

networks:
  photure_network:
    driver: bridge
